// <auto-generated />
using API_assistencia_tecnica.DataContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API_assistencia_tecnica.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("API_assistencia_tecnica.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("BairroCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CidadeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("EmailCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RgCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("RuaCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoneCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("API_assistencia_tecnica.Models.Equipamento", b =>
                {
                    b.Property<int>("IdEquipamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Amperagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AnoDeFabricacao")
                        .HasColumnType("int");

                    b.Property<string>("CodigoDeFabricacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeEquipamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdEquipamento");

                    b.ToTable("Equipamentos");
                });

            modelBuilder.Entity("API_assistencia_tecnica.Models.Fornecedor", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjCpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InscricaoEstadual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeFornecedor")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroDoImovel")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Representante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Site")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("TelefoneCelular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdFornecedor");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("API_assistencia_tecnica.Models.Orcamento", b =>
                {
                    b.Property<int>("IdOrcamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Amperagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeEquipamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Pecas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrazoDeEntrega")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorComDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorSemDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdOrcamento");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("API_assistencia_tecnica.Models.Peca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CodigoDeProducao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LocalDeFabricacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomePeca")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NumeroDeSerie")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PesoKg")
                        .HasColumnType("double");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(65,30)");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Pecas");
                });

            modelBuilder.Entity("API_assistencia_tecnica.Models.Reparo", b =>
                {
                    b.Property<int>("IdLancamentoReparo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Amperagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Fabricante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FormaDePagamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeEquipamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Observacao")
                        .HasColumnType("longtext");

                    b.Property<string>("Pecas")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PrazoDeEntrega")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("ValorComDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("ValorSemDesconto")
                        .HasColumnType("decimal(65,30)");

                    b.Property<string>("Voltagem")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdLancamentoReparo");

                    b.ToTable("Reparos");
                });
#pragma warning restore 612, 618
        }
    }
}
